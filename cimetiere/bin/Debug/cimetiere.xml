<?xml version="1.0"?>
<doc>
<assembly>
<name>
cimetiere
</name>
</assembly>
<members>
<member name="T:cimetiere.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.Add_16x">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.fondformulaire">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.home3">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.moins">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.StackDown_16x">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:cimetiere.My.Resources.Resources.StackUp_16x">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="T:cimetiere.Entites">
<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member>
<member name="T:cimetiere.Entites.t_loc_villeDataTable">
<summary>
Represents the strongly named DataTable class.
</summary>
</member>
<member name="T:cimetiere.Entites.t_loc_villeRow">
<summary>
Represents strongly named DataRow class.
</summary>
</member>
<member name="T:cimetiere.Entites.t_loc_villeRowChangeEvent">
<summary>
Row event argument class
</summary>
</member>
<member name="T:cimetiere.EntitesTableAdapters.t_loc_villeTableAdapter">
<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member>
<member name="T:cimetiere.EntitesTableAdapters.TableAdapterManager">
<summary>
TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
</summary>
</member>
<member name="M:cimetiere.EntitesTableAdapters.TableAdapterManager.UpdateUpdatedRows(cimetiere.Entites,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
<summary>
Update rows in top-down order.
</summary>
</member>
<member name="M:cimetiere.EntitesTableAdapters.TableAdapterManager.UpdateInsertedRows(cimetiere.Entites,System.Collections.Generic.List{System.Data.DataRow})">
<summary>
Insert rows in top-down order.
</summary>
</member>
<member name="M:cimetiere.EntitesTableAdapters.TableAdapterManager.UpdateDeletedRows(cimetiere.Entites,System.Collections.Generic.List{System.Data.DataRow})">
<summary>
Delete rows in bottom-up order.
</summary>
</member>
<member name="M:cimetiere.EntitesTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
<summary>
Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
</summary>
</member>
<member name="M:cimetiere.EntitesTableAdapters.TableAdapterManager.UpdateAll(cimetiere.Entites)">
<summary>
Update all changes to the dataset.
</summary>
</member>
<member name="T:cimetiere.EntitesTableAdapters.TableAdapterManager.UpdateOrderOption">
<summary>
Update Order Option
</summary>
</member>
<member name="T:cimetiere.EntitesTableAdapters.TableAdapterManager.SelfReferenceComparer">
<summary>
Used to sort self-referenced table's rows
</summary>
</member>
<member name="T:cimetiere.SortableBindingList`1">
 <summary>
 SortableBindingList is a list that supports sorting its items and filtering them.
 When binding a <see cref="T:System.Collections.Generic.List`1"/> to a <see cref="T:System.Windows.Forms.DataGridView"/>, you can not sort by clicking on the columns
 or filter the list. With this list, you can.
 
 Dependencies:
  - .NET 3.5 or higher
  - System.Linq.Dynamic (DynamicQuery NuGet package: http://www.nuget.org/packages/DynamicQuery/)
 </summary>
 <typeparam name="T">The data type represented by this SortableBindingList</typeparam>
 <remarks></remarks>
 
</member>
<member name="M:cimetiere.SortableBindingList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
 <summary>
 Creates a new instance of SortableBindingList and populates it with the contents of the given list.
 </summary>
 <param name="list"></param>
 <remarks></remarks>
</member>
<member name="P:cimetiere.SortableBindingList`1.Filter">
 <summary>
 You can filter this list by adding a LINQ Where-clause.
 </summary>
 <value>A string representing a LINQ Where-clause</value>
 <returns>The filter value</returns>
 <example>
 You can filter on any property of <typeparamref name="T"/> like you would do when writing a LINQ Where-clause:
 <code lang="VB">
 Public Class Customer
     Public Property Name As String 
     Public Property FirstName As String
     Public Property CountryIsoCode As String
 End Class

 '...  
 
 Dim list As New SortableBindingList(Of Customer)()
 
 '... 
 
 list.Filter = "CountryIsoCode.ToUpper() = ""BE""" 'Only show Belgian customers
 </code>
 <code lang="C#">
 public class Customer
 {
     public string Name { get; set; }
     public string FirstName { get; set; }
     public string CountryIsoCode { get; set; }
 }
 
 //...
 
 SortableBindingList&gt;Customer&lt; list = new SortableBindingList&gt;Customer&lt;();
 
 //...
 
 list.Filter = "CountryIsoCode.ToUpper() = \"BE\"" //Only show Belgian customers
 </code>
 </example>
</member>
</members>
</doc>
